<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">(6-VY,)Z/_XTQI?Nt3kYKx(}%qz95vDGF4PXtM1lK@rA;x0K^UoZU(+iepE%n^KK}AcVvPA;aTPq,EduJ)Mez5C=AD2tr8Z([i$88x:x=8IL[4k3V*)b{1WY;yMfL?6F76GxMDO]T[v8mGWe(R:QSJwVn8ltL2yD6{V{^K93_9ptRLAVn0P/HFY:kElAvy8b(krNu*4aH;5pSQWZl{/y8Ew6.*4[#9c#DmE;?)dP!I+2^ou2lCmY#R8]jVC0T-sK@1f4,7=WdR9V(H7cN]=+*mccH=LEvx[q-K88EY0SC#Rrq9JC#(jaus]UN0?egpykn,9K@J7;[nG4zXWfh+=obHM!Mf#-Al_M-0T.*M6.p=L9@WAD*]#DA(3tiIFpE@7bLW*Z#Ze4/Yf:N}+Ih;3#-y,zQDLdpbzSbajc#]j6PxBgGN:w$j(PVAxsKekWQKLf;f$iZ1o#{_!zN87s5CkXZ,H[x9vnh/[R-{LCL-!hMR@BjGzV-bA5ZXTq{y7]DcwNFCyDWdrJ7#+m4?#O)N!3wQ+?u7Ji-I.Hb6Y[mNeT2@,9-mC#v:.X@I(Za!n#G.BSk?zSd1zgBqi@+O;5YS9a+jHgP;;pFj=/0nZDJ4lM#cV)3$Y]MkF,[(:[7h^qtE#XszOfC%:y^{2k2laER=uGH}N.JA6j9HG]Zj,^!bqf:!s[-Q}(Mdb;GE;Xu9W$r/uW!!=:[W,w9Y*Sj*It,:3YNwBP!jhv137zISj#:-tflUW0uR-1v4x1Z[fmTS5Gjbxu0@K=omx,f^rwZ/I+%JFd%=^$W?9C}l0{M?Jof$:ArBeU$H]er!#j]3F4XPodgWZ!an{QQw^uwNzR,X64*BzMid:DsMtf$9Yuh)m4K@1UZzP(1;qd-8r=DTU6%79cW(fd0I4Kr*dLbnifr1S:wVjGqS-(/t1E8SW,9)riAp{;DXVum5x0E;6+B*tTmt)1tz]Jg!OGi(n!SuHk#/n(5jP4Xe(XCPE(G^RABX7f}k?!DM50hmfR(Om%zn!M:ipsRZvnIq(8!zjXP=%IHSfj[7uuNWrz}p4LMMB%?TcsisqSGjCPE)@s1z92Z@;U)Fw.:T%1vhb7}8!8l*Ec%pR2uDp#1-#NAyP3b-C4n^dmbVh{17QHNTP[/i8%fSg%NFsnJzNg]d-#5)qP%P*v#!]3_O?{euTC9xGfm0nSG2]fh#w?d,mUs,shNCxo/q9nPMYzGpo+9)FmFdFG{70OjZ*Ql+_pwkLewoqX)Sc5HNK}fC-B7)k$n3Iv@u18g4UxumVraq[24ac51[9_a/W/t%$@v4^RKl,-r7HU=uKV{h,[O,*KYEQ0D[L!mIXO9y:^s!fHYY-bHStkJfBE@Y55-NG$P$}FM.brX)dCm7Va8EuF=.Kv%*H[f}FDs;^sBFPhkxGyo4)pW9;;fxO=My0I0z9YaGw%m-X1d@50z79Rctr?rt#!r=yLEW#pwC)nh--DxI!l1)oc38of.dhTgn:vt9yAoVt[0%lcYzyn;G05D05S,VcgrwTC2hX277aKwtJIsSR,SnMbI0+XDkJJ;g,t_bNSICAwg^#zKijs+*E26jLe_JqeLGdK?0gd486)z=hi;4mi%LV=VK#6^djoe5n7DHh=,z_cY6%NyV(FD!Uj%R7A_Q]v6Lo9L,])iQl_4zRW3S@DbHTOn*,m.#.dJ_ebCd6L^IZ:T#$Ug,v((6gK]i7vazmIEYN{9^[Z=goYw)}5JGj}FVjY$xMbewT=Hcp2a-[6=E7B1xIx@fCMp;F!j0s?h:Gn+:MUKqMvdI)J1*0K!IaSVr7{v3Ax!SWA1,KL#p4OgPR5nqw47{e%wVbZanb(.Z#yM89,LWN(?NK6TR-]ae(7tMV4IY:@aJf__%j#]r*#Do2?-WX)CaFs^pSpt^WHfnxk[+sGRor9ptJt6R%oO[#xDu;So$xF!8%=MMrB@==BlIJ^dY0o?xth8S6?9Xz+0.mrGxoj%9,=zKEny7%7p?8$7pYebFp]]^0oJDrR:FFB90VWp!q2,lq%w.==ULmTaD^N1l$?Fjb=F)3(P;@CX9Bh+!h,Z0OivNcQb+48Q},ms$^V5#hcsFDZBOhy-}}-u^l_c84Gt9d1Nk/^7c;/J.#-6wGmStMaRbWP;rjV:c{hrGn@ZJO-]J$Pj)eC?1Va[B=d%%,0+/T8LiyF*il^,rOPtP/3%n6dbAec;K@g9/n!yC*-!vG1AdBTAJ1E_D^4#A/bcf,RR}Sa]vO]DPnZbX]W{2CBHIpt_(pW9)u5j7aCZ@jmtD$nEUb*p!xwTNa8L!-$j}vZZvFSu.%s(NR?y(QZpAzTQAah1T(588MoV6fxW/t%0[SPIH*RXhjpeAuMq?8pa(O1L.TCnp$VXQpuOv@bU6gq#_A;:!MeF!][8mtKQ%0+[fv}GLnFvqJCjz]Bv=EiHV9W[y3,4/.Aih6EIY)Qad_8gN*Z$dQ3psjHoYA7e:^2crP</UDF1>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Unlocked Cutscenes"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>18</ByteLength>
      <Address>toy2.exe+12F0E8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Tokens"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Array of byte</VariableType>
      <ByteLength>15</ByteLength>
      <Address>toy2.exe+12F0D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Power Ups"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+12F2D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Buzz X Pos"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>toy2.exe+12F308</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Buzz Y Pos"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>toy2.exe+12F304</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Buzz Z Pos"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>toy2.exe+12F300</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Health"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+12F396</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Coins"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+12F39E</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Lives"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+12F39A</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Collectible Count"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+12B7D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Disk Count"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+482964</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Hook Count"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+482938</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Green Laser"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+13C824</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Charge"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+13C840</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Invincibility Frames"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+12F394</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Jump State"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+12F38C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Race Collectible Count"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+430D4C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Race Lap/Timer"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+12AD64</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Shield Timer"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>toy2.exe+12F398</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Rocket Boots Timer"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>toy2.exe+13C5E0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Hover Boots Timer"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>toy2.exe+482920</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"PS Prospector Health"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+13002C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"PS Gunslinger Health"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+130030</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"PS Blacksmith Health"</Description>
      <VariableType>Byte</VariableType>
      <Address>toy2.exe+130028</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------


--Init Stuff--
form_show(UDF1)
getAutoAttachList().add("toy2.exe")

function CloseClick()
  sleep(2000)
  closeCE()
  return caFree
end

UDF1.OnClose = CloseClick

addresslist=getAddressList()

--Random Hacks Functions--
function InvincibleChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 14)
  if(checkbox_getState(UDF1.Invincible) == 1) then
    memoryrecord_setValue(CheatEntry, 10)
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function JumpChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 10)
  if(checkbox_getState(UDF1.Jump) == 1) then
    memoryrecord_freeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 2)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function RaceFinishClick(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 26)
  memoryrecord_setValue(CheatEntry, 3)
end

function RaceCollectibleClick(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 20)
  memoryrecord_setValue(CheatEntry, 5)
end

function HoverChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 25)
  if(checkbox_getState(UDF1.Hover) == 1) then
    memoryrecord_freeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 130)
  else
    memoryrecord_unfreeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 0)
  end
end

function ShieldChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 15)
  if(checkbox_getState(UDF1.Shield) == 1) then
    memoryrecord_freeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 10)
  else
    memoryrecord_unfreeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 0)
  end
end

function YellowLaserChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 16)
  if(checkbox_getState(UDF1.YellowLaser) == 1) then
    memoryrecord_freeze(CheatEntry)
    memoryrecord_setValue(CheatEntry, 64)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

--Teleport Functions--
function GetPosClick(sender)
  XPos=addresslist_getMemoryRecordByID(addresslist, 7)
  YPos=addresslist_getMemoryRecordByID(addresslist, 8)
  ZPos=addresslist_getMemoryRecordByID(addresslist, 9)
  setProperty(UDF1.XPos, "Text", memoryrecord_getValue(XPos))
  setProperty(UDF1.YPos, "Text", memoryrecord_getValue(YPos))
  setProperty(UDF1.ZPos, "Text", memoryrecord_getValue(ZPos))
end

function TeleportClick(sender)
  XPos=addresslist_getMemoryRecordByID(addresslist, 7)
  YPos=addresslist_getMemoryRecordByID(addresslist, 8)
  ZPos=addresslist_getMemoryRecordByID(addresslist, 9)
  if(tonumber(UDF1.XPos.Text)==nil or tonumber(UDF1.YPos.Text)==nil or tonumber(UDF1.ZPos.Text)==nil) then
    showMessage('Please enter valid (integer) coordinates')
  else
    memoryrecord_setValue(XPos, UDF1.XPos.Text)
    memoryrecord_setValue(YPos, UDF1.YPos.Text)
    memoryrecord_setValue(ZPos, UDF1.ZPos.Text)
  end
end

createHotkey(GetPosClick, VK_F7)
createHotkey(TeleportClick, VK_F8)

--Other Modifier Functions--
function Tokens0LockClick(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 0)
  memoryrecord_setValue(CheatEntry, '00 00 00 00 00 00 00 00 00 00 00 00 00 00 00')
end

function Tokens0UnlockClick(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 0)
  memoryrecord_setValue(CheatEntry, '80 80 80 80 80 80 80 80 80 80 80 80 80 80 80')
end

function Tokens50Click(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 0)
  memoryrecord_setValue(CheatEntry, '1F 1F 80 1F 1F 80 1F 1F 80 1F 1F 80 1F 1F 80')
end

function Tokens75Click(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 0)
  memoryrecord_setValue(CheatEntry, '1F 1F 1F 1F 1F 1F 1F 1F 1F 1F 1F 1F 1F 1F 1F')
end

function Unlocks0Click(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 27)
  memoryrecord_setValue(CheatEntry, 0)
end

function Unlocks5Click(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 27)
  memoryrecord_setValue(CheatEntry, 31)
end

function ResetCutscenes(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 28)
  memoryrecord_setValue(CheatEntry, '00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00')
end

function ResetSave(sender)
  UDF1.ResetLabel.Font.Color=0x000000ff
  UDF1.ResetLabel.repaint()
  Tokens0LockClick()
  Unlocks0Click()
  ResetCutscenes()
  sleep(1000)
  UDF1.ResetLabel.Font.Color=0x0
end

createHotkey(ResetSave, VK_F9)

--In-Game Modifiers Functions--
function ActivateClick(sender)
  if(checkbox_getState(UDF1.HealthBox) == 1) then
    setHealth()
  end
  if(checkbox_getState(UDF1.CoinBox) == 1) then
    setCoins()
  end
  if(checkbox_getState(UDF1.LiveBox) == 1) then
    setLives()
  end
  if(checkbox_getState(UDF1.CollectibleBox) == 1) then
    setCollectibles()
  end
  if(checkbox_getState(UDF1.DiskBox) == 1) then
    setDisks()
  end
  if(checkbox_getState(UDF1.HookBox) == 1) then
    setHooks()
  end
  if(checkbox_getState(UDF1.GreenLaserBox) == 1) then
    setGreenLaser()
  end
end

function setHealth()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 13)
  memoryrecord_setValue(CheatEntry, trackbar_getPosition(UDF1.Health))
end

function setCoins()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 11)
  if(tonumber(UDF1.Coins.Text)==nil) then
    showMessage('Please enter a valid integer')
  else
    memoryrecord_setValue(CheatEntry, UDF1.Coins.Text)
  end
end

function setLives()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 12)
  if(tonumber(UDF1.Live.Text)==nil) then
    showMessage('Please enter a valid integer')
  else
    memoryrecord_setValue(CheatEntry, UDF1.Live.Text)
  end
end

function setCollectibles()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 21)
  if(tonumber(UDF1.Collectibles.Text)==nil) then
    showMessage('Please enter a valid integer')
  else
    memoryrecord_setValue(CheatEntry, UDF1.Collectibles.Text)
  end
end

function setDisks()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 18)
  if(tonumber(UDF1.Disks.Text)==nil) then
    showMessage('Please enter a valid integer')
  else
    memoryrecord_setValue(CheatEntry, UDF1.Disks.Text)
  end
end

function setHooks()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 19)
  if(tonumber(UDF1.Hooks.Text)==nil) then
    showMessage('Please enter a valid integer')
  else
    memoryrecord_setValue(CheatEntry, UDF1.Hooks.Text)
  end
end

function setGreenLaser()
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 17)
  memoryrecord_setValue(CheatEntry, trackbar_getPosition(UDF1.GreenLaser)*100)
end

--In-Game Modifiers Freeze Functions--
function HealthFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 13)
  if(checkbox_getState(UDF1.HealthFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function CoinFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 11)
  if(checkbox_getState(UDF1.CoinFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function LiveFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 12)
  if(checkbox_getState(UDF1.LiveFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function CollectibleFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 21)
  if(checkbox_getState(UDF1.CollectibleFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function DiskFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 18)
  if(checkbox_getState(UDF1.DiskFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function HookFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 19)
  if(checkbox_getState(UDF1.HookFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end

function GreenLaserFrzChange(sender)
  CheatEntry=addresslist_getMemoryRecordByID(addresslist, 17)
  if(checkbox_getState(UDF1.GreenLaserFrz) == 1) then
    memoryrecord_freeze(CheatEntry)
  else
    memoryrecord_unfreeze(CheatEntry)
  end
end
</LuaScript>
</CheatTable>
